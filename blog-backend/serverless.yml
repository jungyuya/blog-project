service: blog-api-dev

provider:
  name: aws
  runtime: provided.al2
  region: ap-northeast-2
  stage: dev
  memorySize: 256
  timeout: 15
  environment:
    DYNAMODB_TABLE: JungyuBlogPosts # Terraform으로 생성된 테이블 이름으로 변경
  iam:
    role: arn:aws:iam::786382940028:role/JungyuBlogLambdaExecutionRole # Terraform으로 생성된 IAM Role ARN으로 변경

package:
  individually: true # 각 함수별로 패키징합니다.
  # 서비스 레벨 exclude는 Go 바이너리에 불필요한 파일이 없도록 최소화합니다.
  exclude:
    - ./** # 모든 파일을 일단 제외 (기본값)
    # 아래 include 패턴에서 명시된 파일 외에는 모두 제외됩니다.
    # 각 함수의 package.artifact에서 직접 zip 파일을 지정하므로, 여기에 추가적인 패턴이 필요하지 않습니다.
    # 혹시 Go 모듈 파일(go.mod, go.sum)이 각 zip에 포함되어야 한다면, 해당 함수 artifact zip에 직접 포함시켜야 합니다.
    # 현재는 Lambda 실행에 필수적이지 않으므로 제외된 상태입니다.

plugins:
  - serverless-go-plugin # 여전히 Go 빌드 환경 설정을 위해 사용합니다. (자동 빌드는 안 됨)

custom:
  go:
    # 플러그인이 자동으로 빌드하는 대신, 수동 빌드를 위한 환경만 설정합니다.
    goBuildMode: "mod"
    goBuildEnvironment:
      GO111MODULE: "on"
      GOOS: linux
      GOARCH: amd64
    strip: true # 바이너리 용량 최적화 (수동 빌드 시에도 고려)
    # bin 또는 buildTarget 설정은 이제 사용하지 않습니다.
    # 이 플러그인은 Go 빌드를 위한 환경 변수를 제공하는 역할로만 사용합니다.

functions:
  getPosts:
    handler: bootstrap
    # 직접 빌드된 바이너리를 .zip 파일로 아티팩트화합니다.
    package:
      artifact: getPosts/getPosts.zip # <--- 수정됨: 압축 파일 이름을 명시합니다.
    events:
      - http:
          path: posts
          method: get
          cors: true

  getPost:
    handler: bootstrap
    package:
      artifact: getPost/getPost.zip # <--- 수정됨
    events:
      - http:
          path: posts/{postId}
          method: get
          cors: true

  createPost:
    handler: bootstrap
    package:
      artifact: createPost/createPost.zip # <--- 수정됨
    events:
      - http:
          path: posts
          method: post
          cors: true

  updatePost:
    handler: bootstrap
    package:
      artifact: updatePost/updatePost.zip # <--- 수정됨
    events:
      - http:
          path: posts/{postId}
          method: put
          cors: true

  deletePost:
    handler: bootstrap
    package:
      artifact: deletePost/deletePost.zip # <--- 수정됨
    events:
      - http:
          path: posts/{postId}
          method: delete
          cors: true